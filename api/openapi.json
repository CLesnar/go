{
  "openapi": "3.0.2",
  "info": {
    "title": "CLesnar Go Models",
    "description": "Common Data Models",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "http:localhost:8111"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    },
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "description": "Very simple Health Check",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Health"
                }
              }
            }
          }
        }
      }
    },
    "/v1/weather/data": {
      "get": {
        "description": "Get the weather condition.",
        "parameters": [
          {
            "in": "query",
            "name": "lat",
            "description": "Latitude to get weather conditions for.",
            "schema": {
              "type": "number",
              "format": "double"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "lon",
            "description": "Longitude to get weather conditions for.",
            "schema": {
              "type": "number",
              "format": "double"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "appid",
            "description": "API ID to Open Weather API.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeatherConditionGetResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemas": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    },
    "schemas": {
      "Health": {
        "description": "Simple Health Check",
        "type": "object",
        "required": null,
        "properties": {
          "ok": {
            "type": "boolean"
          }
        }
      },
      "OpenWeatherMapParametersGetCurrentData": {
        "description": "Open Weather Map API Parameters for Get Weather Data. See OpenWeatherMap details on APIs: https://openweathermap.org/current",
        "type": "object",
        "required": null,
        "properties": {
          "Latitude": {
            "description": "The latitude for which temperature data is retrieved for.",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "lat"
            }
          },
          "Longitude": {
            "description": "The longitude for which temperature data is retrieved for.",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "lon"
            }
          },
          "AppId": {
            "description": "The API Key for access to OpenWeatherMap API",
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "json": "appid"
            }
          },
          "Mode": {
            "description": "Response format. Possible values are xml and html. If you don't use the mode parameter format is JSON by default.",
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "json": "mode"
            }
          },
          "Units": {
            "description": "Change the units the temperature response is in. Can be [standard, metric, imperial]. Where standard is absolute or Kelvin, metric is Celsius, imperial is Fahrenheit.",
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "json": "units"
            }
          },
          "Language": {
            "description": "Change the language the response is in. Default is English.",
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "json": "lang"
            }
          }
        }
      },
      "OpenWeatherMapResponse": {
        "description": "Open Weather API Response to GET Current Data: https://api.openweathermap.org/data/2.5/weather.",
        "type": "object",
        "required": [
          "Coordinates",
          "Weather",
          "Base",
          "Main",
          "Visibility",
          "Wind",
          "Clouds",
          "System",
          "TimeData",
          "Id",
          "Name",
          "Cod"
        ],
        "properties": {
          "Coordinates": {
            "$ref": "#/components/schemas/OpenWeatherMapResponseCoordinates",
            "x-oapi-codegen-extra-tags": {
              "json": "coord"
            }
          },
          "Weather": {
            "description": "Open Weather API Weather Data.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenWeatherMapResponseWeather"
            },
            "x-oapi-codegen-extra-tags": {
              "json": "weather"
            }
          },
          "Base": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "json": "base"
            }
          },
          "Main": {
            "$ref": "#/components/schemas/OpenWeatherMapResponseMain",
            "x-oapi-codegen-extra-tags": {
              "json": "main"
            }
          },
          "Visibility": {
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "visibility"
            }
          },
          "Wind": {
            "$ref": "#/components/schemas/OpenWeatherMapResponseWind",
            "x-oapi-codegen-extra-tags": {
              "json": "wind"
            }
          },
          "Clouds": {
            "$ref": "#/components/schemas/OpenWeatherMapResponseClouds",
            "x-oapi-codegen-extra-tags": {
              "json": "clouds"
            }
          },
          "Rain": {
            "$ref": "#/components/schemas/OpenWeatherMapResponseRain",
            "x-oapi-codegen-extra-tags": {
              "json": "rain"
            }
          },
          "Snow": {
            "$ref": "#/components/schemas/OpenWeatherMapResponseSnow",
            "x-oapi-codegen-extra-tags": {
              "json": "snow"
            }
          },
          "TimeData": {
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "dt"
            }
          },
          "System": {
            "$ref": "#/components/schemas/OpenWeatherMapResponseSystem",
            "x-oapi-codegen-extra-tags": {
              "json": "sys"
            }
          },
          "TimeZone": {
            "type": "integer",
            "format": "int64",
            "x-oapi-codegen-extra-tags": {
              "json": "timezone"
            }
          },
          "Id": {
            "type": "integer",
            "format": "int64",
            "x-oapi-codegen-extra-tags": {
              "json": "id"
            }
          },
          "Name": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "json": "name"
            }
          },
          "Cod": {
            "type": "integer",
            "format": "int64",
            "x-oapi-codegen-extra-tags": {
              "json": "cod"
            }
          }
        }
      },
      "OpenWeatherMapResponseClouds": {
        "description": "Open Weather API Clouds Data.",
        "type": "object",
        "required": [
          "CloudinessPercent"
        ],
        "properties": {
          "CloudinessPercent": {
            "description": "Cloudiness, %",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "all"
            }
          }
        }
      },
      "OpenWeatherMapResponseCoordinates": {
        "description": "Open Weather API Coordinates Data.",
        "type": "object",
        "required": [
          "Latitude",
          "Longitude"
        ],
        "properties": {
          "Latitude": {
            "description": "Longitude of the location",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "lat"
            }
          },
          "Longitude": {
            "description": "Latitude of the location",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "lon"
            }
          }
        }
      },
      "OpenWeatherMapResponseMain": {
        "description": "Open Weather API Main Data.",
        "type": "object",
        "required": [
          "Temperature",
          "FeelsLike",
          "Pressure",
          "Humidity",
          "TemperatureMin",
          "TemperatureMax",
          "SeaLevel",
          "GroundLevel"
        ],
        "properties": {
          "Temperature": {
            "description": "Temperature. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "temp"
            }
          },
          "FeelsLike": {
            "description": "Temperature. This temperature parameter accounts for the human perception of weather. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "feels_like"
            }
          },
          "Pressure": {
            "description": "Atmospheric pressure on the sea level, hPa",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "pressure"
            }
          },
          "Humidity": {
            "description": "Humidity, %",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "humidity"
            }
          },
          "TemperatureMin": {
            "description": "Minimum temperature at the moment. This is minimal currently observed temperature (within large megalopolises and urban areas). Please find more info here. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "temp_min"
            }
          },
          "TemperatureMax": {
            "description": "Maximum temperature at the moment. This is maximal currently observed temperature (within large megalopolises and urban areas). Please find more info here. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "temp_max"
            }
          },
          "SeaLevel": {
            "description": "Atmospheric pressure on the sea level, hPa",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "sea_level"
            }
          },
          "GroundLevel": {
            "description": "Atmospheric pressure on the ground level, hPa",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "grnd_level"
            }
          }
        }
      },
      "OpenWeatherMapResponseRain": {
        "description": "Open Weather API Rain Data.",
        "type": "object",
        "required": [
          "Volume1Hour",
          "Volume3Hour"
        ],
        "properties": {
          "Volume1Hour": {
            "description": "(where available) Rain volume for the last 1 hour, mm. Please note that only mm as units of measurement are available for this parameter",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "1h"
            }
          },
          "Volume3Hour": {
            "description": "(where available) Rain volume for the last 3 hours, mm. Please note that only mm as units of measurement are available for this parameter",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "3h"
            }
          }
        }
      },
      "OpenWeatherMapResponseSnow": {
        "description": "Open Weather API Snow Data.",
        "type": "object",
        "required": [
          "Volume1Hour",
          "Volume3Hour"
        ],
        "properties": {
          "Volume1Hour": {
            "description": "(where available) Snow volume for the last 1 hour, mm. Please note that only mm as units of measurement are available for this parameter",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "1h"
            }
          },
          "Volume3Hour": {
            "description": "(where available) Snow volume for the last 3 hours, mm. Please note that only mm as units of measurement are available for this parameter",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "3h"
            }
          }
        }
      },
      "OpenWeatherMapResponseSystem": {
        "description": "Open Weather API System Data.",
        "type": "object",
        "required": [
          "Type",
          "Id",
          "Message",
          "Country",
          "Sunrise",
          "Sunset"
        ],
        "properties": {
          "Type": {
            "description": "Internal parameter",
            "type": "integer",
            "format": "int64",
            "x-oapi-codegen-extra-tags": {
              "json": "type"
            }
          },
          "Id": {
            "description": "Internal parameter",
            "type": "integer",
            "format": "int64",
            "x-oapi-codegen-extra-tags": {
              "json": "id"
            }
          },
          "Message": {
            "description": "Internal parameter",
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "json": "message"
            }
          },
          "Country": {
            "description": "Country code (GB, JP etc.)",
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "json": "country"
            }
          },
          "Sunrise": {
            "description": "Sunrise time, unix, UTC",
            "type": "integer",
            "format": "int64",
            "x-oapi-codegen-extra-tags": {
              "json": "sunrise"
            }
          },
          "Sunset": {
            "description": "Sunset time, unix, UTC",
            "type": "integer",
            "format": "int64",
            "x-oapi-codegen-extra-tags": {
              "json": "sunset"
            }
          }
        }
      },
      "OpenWeatherMapResponseWeather": {
        "description": "Open Weather API Weather Data.",
        "type": "object",
        "required": [
          "Id",
          "Main",
          "Description",
          "Icon"
        ],
        "properties": {
          "Main": {
            "description": "Group of weather parameters (Rain, Snow, Clouds etc.)",
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "json": "main"
            }
          },
          "Description": {
            "description": "Weather condition within the group. Please find more here. You can get the output in your language.",
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "json": "description"
            }
          },
          "Icon": {
            "description": "Weather icon id",
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "json": "icon"
            }
          },
          "Id": {
            "description": "Weather condition id",
            "type": "integer",
            "format": "int64",
            "x-oapi-codegen-extra-tags": {
              "json": "id"
            }
          }
        }
      },
      "OpenWeatherMapResponseWind": {
        "description": "Open Weather API Wind Data.",
        "type": "object",
        "required": [
          "Speed",
          "WindDirectionDegrees",
          "Gust"
        ],
        "properties": {
          "Speed": {
            "description": "Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "speed"
            }
          },
          "WindDirectionDegrees": {
            "description": "Wind direction, degrees (meteorological)",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "deg"
            }
          },
          "Gust": {
            "description": "Wind gust. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "gust"
            }
          }
        }
      },
      "WeatherConditionGetParameters": {
        "description": "Weather Web App Parameters for Get Weather Data",
        "type": "object",
        "required": null,
        "properties": {
          "Latitude": {
            "description": "latitude of location on earth to get weather data for",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "lat"
            }
          },
          "Longitude": {
            "description": "longitude of location on earth to get weather data for",
            "type": "number",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "json": "lon"
            }
          },
          "AppId": {
            "description": "OpenWeatherMap API ID/Key generated by signing up to use their APIs",
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "json": "appid"
            }
          }
        }
      },
      "WeatherConditionGetResponse": {
        "description": "Weather Web App Parameters for Get Weather Data",
        "type": "object",
        "required": [
          "temperature",
          "temperature_condition",
          "outside_condition",
          "city"
        ],
        "properties": {
          "city": {
            "description": "The City found at the latitude & longitude",
            "type": "string"
          },
          "outside_condition": {
            "description": "The outside condition.",
            "type": "string"
          },
          "temperature_condition": {
            "description": "The temperature condition.",
            "type": "string"
          },
          "temperature": {
            "description": "The temperature in degrees fahrenheit",
            "type": "string"
          }
        }
      },
      "MtgZones": {
        "description": "Magic: The Gathering Standard game play meta data",
        "type": "object",
        "required": [
          "battlefield",
          "hand",
          "library",
          "graveyard",
          "the_stack",
          "exile"
        ],
        "properties": {
          "battlefield": {
            "description": "Cards in Battlefield",
            "type": "array",
            "items": {
              "description": "Magic: The Gathering Standard game play meta data",
              "type": "object",
              "required": [
                "creatures",
                "lands"
              ],
              "properties": {
                "creatures": {
                  "description": "Creatures List",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MtgBattleCard"
                  }
                },
                "lands": {
                  "description": "Lands / Resources List",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MtgBattleCard"
                  }
                }
              }
            }
          },
          "hand": {
            "description": "List of cards in Player hand",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MtgBattleCard"
            }
          },
          "library": {
            "description": "Lands / Resources List",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MtgBattleCard"
            }
          },
          "graveyard": {
            "description": "Lands / Resources List",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MtgBattleCard"
            }
          },
          "the_stack": {
            "description": "Spells unresolved List",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MtgBattleCard"
            }
          },
          "exile": {
            "description": "Lands / Resources List",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MtgBattleCard"
            }
          }
        }
      },
      "MtgPlayer": {
        "description": "Magic: The Gathering Standard game play meta data",
        "type": "object",
        "required": [
          "zones",
          "deck",
          "name"
        ],
        "properties": {
          "name": {
            "description": "Player Name",
            "type": "string"
          },
          "zones": {
            "description": "Cards in each Zone",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MtgZones"
            }
          },
          "deck": {
            "description": "Deck cards List. Rules of the Deck: 60 Card minimum, 4 limit on copies (exception for basic lands).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MtgCard"
            }
          }
        }
      },
      "MtgBattleField": {
        "description": "Magic: The Gathering Standard game play meta data",
        "type": "object",
        "required": [
          "creatures",
          "lands"
        ],
        "properties": {
          "creatures": {
            "description": "Creatures List",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MtgBattleCard"
            }
          },
          "lands": {
            "description": "Lands / Resources List",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MtgBattleCard"
            }
          }
        }
      },
      "MtgGameManager": {
        "description": "Magic: The Gathering Game Manager and Game meta data",
        "type": "object",
        "required": [
          "players",
          "game_phase",
          "player_turn",
          "game_format",
          "invalid_players"
        ],
        "properties": {
          "players": {
            "description": "List Players playing MTG.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MtgPlayer"
            }
          },
          "game_phase": {
            "description": "Magic offically labels its gameplay as \"Begin, Main Phase, Combat, Second Main Phase, and End\"; some have subphases. For details see: https://en.wikipedia.org/wiki/Magic:_The_Gathering_rules#Gameplay.",
            "type": "string",
            "enum": [
              "Begin-Untap",
              "Begin-Upkeep",
              "Begin-Draw",
              "Main-First",
              "Combat-Beginning",
              "Combat-Declare-Attackers",
              "Combat-Declare-Blockers",
              "Combat-Damage",
              "Combat-End",
              "Main-Second",
              "End-Step",
              "End-Cleanup"
            ]
          },
          "player_turn": {
            "description": "Current player turn. Index of playerBattleFields.",
            "type": "integer",
            "format": "int"
          },
          "game_format": {
            "description": "Magic offically labels its gameplay as \"Begin, Main Phase, Combat, Second Main Phase, and End\"; some have subphases. For details see: https://en.wikipedia.org/wiki/Magic:_The_Gathering_rules#Gameplay.",
            "type": "string",
            "enum": [
              "Main-Second",
              "End-Step",
              "End-Cleanup"
            ]
          },
          "invalid_players": {
            "description": "List of errors from players' decks or other data. Empty list signals all players are valid and ready to play.",
            "type": "array",
            "items": {
              "additionalProperties": {}
            }
          }
        }
      },
      "MtgSet": {
        "description": "Magic: The Gathering card data",
        "type": "object",
        "required": null,
        "properties": {
          "name": {
            "description": "Set Name",
            "type": "string"
          }
        }
      },
      "MtgCard": {
        "description": "Magic: The Gathering card data",
        "type": "object",
        "required": null,
        "properties": {
          "name": {
            "description": "Player Name",
            "type": "string"
          }
        }
      },
      "MtgBattleCard": {
        "description": "Magic: The Gathering card data with meta data for in play. This augments the card for in play activities.",
        "type": "object",
        "required": null,
        "properties": {
          "card": {
            "$ref": "#/components/schemas/MtgCard"
          },
          "is_tapped": {
            "description": "boolean signaling the card has been tapped this turn within play or battle.",
            "type": "boolean"
          },
          "is_blocker": {
            "description": "boolean signaling the card is being used this turn as a blocker within play or battle.",
            "type": "boolean"
          },
          "is_attacker": {
            "description": "boolean signaling the card is being used this turn as an attacker within play or battle.",
            "type": "boolean"
          },
          "power": {
            "description": "power of attack or defense this turn.",
            "type": "string"
          },
          "life": {
            "description": "life of this creature this turn.",
            "type": "string"
          }
        }
      }
    }
  }
}
